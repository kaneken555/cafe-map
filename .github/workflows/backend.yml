# .github/workflows/backend.yml

name: Backend Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - 'docker/**'
      - '.github/workflows/backend.yml'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      # 🔹 GitHub Actions のグローバルIPを取得
      - name: Get GitHub Actions IP
        id: myip
        run: echo "IP=$(curl -s https://checkip.amazonaws.com)" >> $GITHUB_ENV        

      # 🔹 IPをセキュリティグループに一時許可
      - name: Allow SSH from GitHub Actions
        run: |
          echo "📡 許可するIP: ${{ env.IP }}"
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.BASTION_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ env.IP }}/32 \
            --region ap-northeast-1

      # 🔹 デプロイ処理（踏み台経由でターゲットEC2にSSHしてdeploy.sh実行）
      - name: SSH to Bastion and Run deploy.sh
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.BASTION_HOST }}
          username: ${{ secrets.BASTION_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "🔑 ターゲット用のSSH鍵を保存"
            echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/target_key.pem
            chmod 600 ~/.ssh/target_key.pem

            echo "🚀 ターゲットEC2で deploy.sh 実行"
            ssh -o StrictHostKeyChecking=no -i ~/.ssh/target_key.pem ec2-user@${{ secrets.TARGET_PRIVATE_IP }} << 'EOS'
              echo "📦 デプロイスクリプトを実行中..."
              cd /home/ec2-user/
              chmod +x ./deploy.sh
              ./deploy.sh
            EOS

      # 🔹 セキュリティグループからIPを削除（常に実行）
      - name: Revoke SSH access
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.BASTION_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ env.IP }}/32 \
            --region ap-northeast-1